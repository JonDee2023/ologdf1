{
	"name": "dataflow1b",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "SalesOrderDetailsStream",
					"description": "Load SalesOrderDetails table from SQL db"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "SalesOrderHeaderStream",
					"description": "Load SalesOrderHeader table from SQL db"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "CustomersStream",
					"description": "Load Customer table from SQL db"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "ProductTableStream",
					"description": "Load Product table from SQL db"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable5",
						"type": "DatasetReference"
					},
					"name": "ProductCategoryStream",
					"description": "Load ProductCategory from SQL db"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable1",
						"type": "DatasetReference"
					},
					"name": "FactsTableStream",
					"description": "Dump output in Synapse DW"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable2",
						"type": "DatasetReference"
					},
					"name": "CustomersDimStream",
					"description": "Dump Customer dimension table in Synapse DW"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable3",
						"type": "DatasetReference"
					},
					"name": "ProductsDimensionStream",
					"description": "Dump Products Dimension table in Synapse DW"
				}
			],
			"transformations": [
				{
					"name": "DetailHeaderJoin"
				},
				{
					"name": "SelectColumnsStream"
				},
				{
					"name": "DerivedTotalDue"
				},
				{
					"name": "SelectColumns"
				},
				{
					"name": "ProductNCategoryJoin"
				},
				{
					"name": "SelectProductsColumnsStream"
				},
				{
					"name": "CustomerSurrogateKeyStream"
				},
				{
					"name": "ProductSurrogateKeyStream"
				},
				{
					"name": "FilterNullColorStream"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as integer,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(38,6),",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderDetailsStream",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderHeaderStream",
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT COUNT(*) FROM SalesLT.Customer \\nWHERE CustomerID<20000',",
				"     format: 'query') ~> CustomersStream",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductTableStream",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductCategoryStream",
				"SalesOrderDetailsStream, SalesOrderHeaderStream join(SalesOrderDetailsStream@SalesOrderID == SalesOrderHeaderStream@SalesOrderID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> DetailHeaderJoin",
				"DetailHeaderJoin select(mapColumn(",
				"          SalesOrderID = SalesOrderDetailsStream@SalesOrderID,",
				"          OrderQty,",
				"          ProductID,",
				"          UnitPrice,",
				"          UnitPriceDiscount,",
				"          LineTotal,",
				"          OrderDate,",
				"          CustomerID,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumnsStream",
				"SelectColumnsStream derive(TotalDue = add(Freight, add(SubTotal, TaxAmt))) ~> DerivedTotalDue",
				"CustomersStream select(mapColumn(",
				"          CustomerID,",
				"          CompanyName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"ProductTableStream, ProductCategoryStream join(ProductTableStream@ProductCategoryID == ProductCategoryStream@ProductCategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductNCategoryJoin",
				"ProductNCategoryJoin select(mapColumn(",
				"          ProductID,",
				"          ProductName = ProductTableStream@Name,",
				"          Color,",
				"          ProductCategoryID = ProductTableStream@ProductCategoryID,",
				"          CategoryName = ProductCategoryStream@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectProductsColumnsStream",
				"SelectColumns keyGenerate(output(CustomerSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> CustomerSurrogateKeyStream",
				"FilterNullColorStream keyGenerate(output(ProductSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ProductSurrogateKeyStream",
				"SelectProductsColumnsStream filter(!(isNull(Color))) ~> FilterNullColorStream",
				"DerivedTotalDue sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesOrderID as integer,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as double,",
				"          UnitPriceDiscount as double,",
				"          LineTotal as double,",
				"          OrderDate as timestamp,",
				"          CustomerID as integer,",
				"          SubTotal as double,",
				"          TaxAmt as double,",
				"          Freight as double,",
				"          TotalDue as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> FactsTableStream",
				"CustomerSurrogateKeyStream sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerSK as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          CompanyName,",
				"          CustomerSK",
				"     )) ~> CustomersDimStream",
				"ProductSurrogateKeyStream sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductSK as integer,",
				"          ProductID as integer,",
				"          ProductName as string,",
				"          Color as string,",
				"          ProductCategoryID as integer,",
				"          CategoryName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          ProductName,",
				"          Color,",
				"          ProductCategoryID,",
				"          CategoryName,",
				"          ProductSK",
				"     )) ~> ProductsDimensionStream"
			]
		}
	}
}